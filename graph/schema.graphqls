type Link {
  id: ID!
  title: String!
  address: String!
  user: User!
}

type User {
  id: ID!
  name: String!
}

type Artist {
  id: ID!
  name: String!
  bio: String
  profileImage: String
  verified: Boolean!
  monthlyListeners: Int!
  albums: [Album!]! 
}

type Genre {
  id: ID!
  name: String!
  description: String
  albums: [Album!]! 
}

type Album {
  id: ID!
  title: String!
  artist: Artist!  
  releaseDate: String!
  coverArt: String
  genre: Genre     
}

#INPUT SECTION --------------------------------------------------------------------------------------

input NewLink {
  title: String!
  address: String!
}

input RefreshTokenInput{
  token: String!
}

input NewUser {
  username: String!
  password: String!
}

input Login {
  username: String!
  password: String!
}

# QUERY SECTION ------------------------------------------------------------------------------

type Query {
  # Artist queries
  artists: [Artist!]!
  artist(id: ID!): Artist
  
  # Existing queries
  genres: [Genre!]!
  genre(id: ID!): Genre
  albums: [Album!]!
  album(id: ID!): Album
  
  getAlbum(id: ID!): Album
}


# MUTATION SECTION ------------------------------------------------------------------------------

type Mutation {
  createLink(input: NewLink!): Link!
  createUser(input: NewUser!): String!
  login(input: Login!): String!
  # we'll talk about this in authentication section
  refreshToken(input: RefreshTokenInput!): String!
}