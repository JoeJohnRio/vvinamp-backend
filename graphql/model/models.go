// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type ListeningHistory struct {
	User     *User  `json:"user"`
	Track    *Track `json:"track"`
	PlayedAt string `json:"playedAt"`
	Progress int    `json:"progress"`
}

type Login struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginPayload struct {
	Viewer *User `json:"viewer"`
}

type Mutation struct {
}

type Playlist struct {
	ID         string           `json:"id"`
	Title      string           `json:"title"`
	Creator    *User            `json:"creator"`
	CreatedAt  string           `json:"createdAt"`
	UpdatedAt  *string          `json:"updatedAt,omitempty"`
	IsPublic   bool             `json:"isPublic"`
	CoverImage *string          `json:"coverImage,omitempty"`
	Tracks     []*PlaylistTrack `json:"tracks"`
}

type PlaylistTrack struct {
	Playlist *Playlist `json:"playlist"`
	Track    *Track    `json:"track"`
	Position int       `json:"position"`
	AddedAt  string    `json:"addedAt"`
}

type Query struct {
}

type QuickPick struct {
	TrackID    string  `json:"trackId"`
	Title      string  `json:"title"`
	ArtistName string  `json:"artistName"`
	PlayCount  int     `json:"playCount"`
	CoverArt   *string `json:"coverArt,omitempty"`
}

type RegisterInput struct {
	Username       string   `json:"username"`
	ProfilePicture string   `json:"profilePicture"`
	Email          string   `json:"email"`
	Password       string   `json:"password"`
	Name           string   `json:"name"`
	Avatar         *string  `json:"avatar,omitempty"`
	Roles          []string `json:"roles"`
}

type RegisterPayload struct {
	User *User `json:"user"`
}

type Track struct {
	ID           string         `json:"id"`
	Title        string         `json:"title"`
	Duration     int            `json:"duration"`
	AudioFileURL string         `json:"audioFileUrl"`
	StreamCount  int            `json:"streamCount"`
	Album        *Album         `json:"album"`
	Explicit     bool           `json:"explicit"`
	Lyrics       *string        `json:"lyrics,omitempty"`
	ReleaseDate  string         `json:"releaseDate"`
	Artists      []*TrackArtist `json:"artists"`
}

type TrackArtist struct {
	Track  *Track  `json:"track"`
	Artist *Artist `json:"artist"`
	Role   *string `json:"role,omitempty"`
}

type UserFollow struct {
	User   *User   `json:"user"`
	Artist *Artist `json:"artist"`
}

type UserLike struct {
	User    *User  `json:"user"`
	Track   *Track `json:"track"`
	LikedAt string `json:"likedAt"`
}
